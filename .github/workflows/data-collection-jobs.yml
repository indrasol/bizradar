name: Data Collection Jobs
# test trigger
on:
  # Run jobs every minute for testing
  schedule:
    - cron: '0 * * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      job:
        description: 'Job to run (freelancer, sam_gov, or leave empty for all)'
        required: false
        type: choice
        options:
          - ''
          - freelancer
          - sam_gov
        default: ''

jobs:
  freelancer-scraper:
    name: Freelancer.com Data Collection
    # Run when scheduled or manually triggered
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' && (github.event.inputs.job == 'freelancer' || github.event.inputs.job == '')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install requests beautifulsoup4 pandas psycopg2-binary python-dotenv
      
      - name: Run Freelancer scraper
        working-directory: ./backend
        run: python -m app.services.cron.freelancer
        env:
          # Database credentials
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  
  sam-gov-api:
    name: SAM.gov API Data Collection
    # Run when scheduled or manually triggered
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' && (github.event.inputs.job == 'sam_gov' || github.event.inputs.job == '')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install aiohttp certifi psycopg2-binary python-dotenv
      
      - name: Run SAM.gov API fetcher
        working-directory: ./backend
        run: python -m app.services.cron.sam_gov
        env:
          # Database credentials
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          SAM_API_KEY: ${{ secrets.SAM_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
